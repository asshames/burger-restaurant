{"ast":null,"code":"var _jsxFileName = \"/home/shames/Desktop/burger-restaurant/src/containers/UserInformation/UserInfo.js\";\nimport React, { Component } from 'react';\nimport Button from '../../components/UI/Button/Button';\nimport classes from './UserInfo.module.css';\nimport Input from '../../components/UI/Input/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserInfo extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      userInfo: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your Name'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        },\n        number: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'number',\n            placeholder: 'Your Phone Number'\n          },\n          value: '',\n          validation: {\n            required: true\n          },\n          valid: false,\n          touched: false\n        }\n      }\n    };\n\n    this.continueHandler = () => {\n      this.props.history.push('/');\n    };\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.userInfo) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.userInfo[key]\n      });\n    }\n\n    let form = /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.orderHandler,\n      children: [formElementsArray.map(formElement => /*#__PURE__*/_jsxDEV(Input, {\n        elementType: formElement.config.elementType,\n        elementConfig: formElement.config.elementConfig,\n        value: formElement.config.value,\n        invalid: !formElement.config.valid,\n        shouldValidate: formElement.config.validation,\n        touched: formElement.config.touched,\n        changed: event => this.inputChangedHandler(event, formElement.id)\n      }, formElement.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        btnType: \"Success\",\n        disabled: !this.state.formIsValid,\n        children: \"CONTINUE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.UserInfo,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Please enter your information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), form]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserInfo;","map":{"version":3,"names":["React","Component","Button","classes","Input","UserInfo","state","userInfo","name","elementType","elementConfig","type","placeholder","value","validation","required","valid","touched","number","continueHandler","props","history","push","render","formElementsArray","key","id","config","form","orderHandler","map","formElement","event","inputChangedHandler","formIsValid"],"sources":["/home/shames/Desktop/burger-restaurant/src/containers/UserInformation/UserInfo.js"],"sourcesContent":["import React, { Component } from 'react';\n\nimport Button from '../../components/UI/Button/Button';\nimport classes from './UserInfo.module.css';\nimport Input from '../../components/UI/Input/Input';\n\nclass UserInfo extends Component {\n    state = {\n        userInfo: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            number: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'number',\n                    placeholder: 'Your Phone Number'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            }\n        }\n    }\n    continueHandler = () => {\n        this.props.history.push('/');\n    }\n\n    render () {\n        const formElementsArray = [];\n        for (let key in this.state.userInfo) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.userInfo[key]\n            });\n        }\n        let form = (\n            <form onSubmit={this.orderHandler}>\n                {formElementsArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType}\n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value}\n                        invalid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n                ))}\n                <Button btnType=\"Success\" disabled={!this.state.formIsValid}>CONTINUE</Button>\n            </form>\n        )\n        return (\n            <div className={classes.UserInfo}>\n                <h4>Please enter your information</h4>\n                {/* <form>\n                    <Input elementType=\"input\" type=\"text\" name=\"name\" placeholder=\"Your Name\" />\n                    <Input elementType=\"input\" type=\"text\" name=\"number\" placeholder=\"Your Phone Number\" />\n                    <Button btnType=\"Success\" clicked={this.continueHandler}>CONTINUE</Button>\n                </form> */}\n                {form}\n            </div>\n        );\n    }\n}\n\nexport default UserInfo;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,KAAP,MAAkB,iCAAlB;;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;EAAA;IAAA;IAAA,KAC7BK,KAD6B,GACrB;MACJC,QAAQ,EAAE;QACNC,IAAI,EAAE;UACFC,WAAW,EAAE,OADX;UAEFC,aAAa,EAAE;YACXC,IAAI,EAAE,MADK;YAEXC,WAAW,EAAE;UAFF,CAFb;UAMFC,KAAK,EAAE,EANL;UAOFC,UAAU,EAAE;YACRC,QAAQ,EAAE;UADF,CAPV;UAUFC,KAAK,EAAE,KAVL;UAWFC,OAAO,EAAE;QAXP,CADA;QAcNC,MAAM,EAAE;UACJT,WAAW,EAAE,OADT;UAEJC,aAAa,EAAE;YACXC,IAAI,EAAE,QADK;YAEXC,WAAW,EAAE;UAFF,CAFX;UAMJC,KAAK,EAAE,EANH;UAOJC,UAAU,EAAE;YACRC,QAAQ,EAAE;UADF,CAPR;UAUJC,KAAK,EAAE,KAVH;UAWJC,OAAO,EAAE;QAXL;MAdF;IADN,CADqB;;IAAA,KA+B7BE,eA/B6B,GA+BX,MAAM;MACpB,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;IACH,CAjC4B;EAAA;;EAmC7BC,MAAM,GAAI;IACN,MAAMC,iBAAiB,GAAG,EAA1B;;IACA,KAAK,IAAIC,GAAT,IAAgB,KAAKnB,KAAL,CAAWC,QAA3B,EAAqC;MACjCiB,iBAAiB,CAACF,IAAlB,CAAuB;QACnBI,EAAE,EAAED,GADe;QAEnBE,MAAM,EAAE,KAAKrB,KAAL,CAAWC,QAAX,CAAoBkB,GAApB;MAFW,CAAvB;IAIH;;IACD,IAAIG,IAAI,gBACJ;MAAM,QAAQ,EAAE,KAAKC,YAArB;MAAA,WACKL,iBAAiB,CAACM,GAAlB,CAAsBC,WAAW,iBAC9B,QAAC,KAAD;QAEI,WAAW,EAAEA,WAAW,CAACJ,MAAZ,CAAmBlB,WAFpC;QAGI,aAAa,EAAEsB,WAAW,CAACJ,MAAZ,CAAmBjB,aAHtC;QAII,KAAK,EAAEqB,WAAW,CAACJ,MAAZ,CAAmBd,KAJ9B;QAKI,OAAO,EAAE,CAACkB,WAAW,CAACJ,MAAZ,CAAmBX,KALjC;QAMI,cAAc,EAAEe,WAAW,CAACJ,MAAZ,CAAmBb,UANvC;QAOI,OAAO,EAAEiB,WAAW,CAACJ,MAAZ,CAAmBV,OAPhC;QAQI,OAAO,EAAGe,KAAD,IAAW,KAAKC,mBAAL,CAAyBD,KAAzB,EAAgCD,WAAW,CAACL,EAA5C;MARxB,GACSK,WAAW,CAACL,EADrB;QAAA;QAAA;QAAA;MAAA,QADH,CADL,eAYI,QAAC,MAAD;QAAQ,OAAO,EAAC,SAAhB;QAA0B,QAAQ,EAAE,CAAC,KAAKpB,KAAL,CAAW4B,WAAhD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAZJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;;IAgBA,oBACI;MAAK,SAAS,EAAE/B,OAAO,CAACE,QAAxB;MAAA,wBACI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,EAOKuB,IAPL;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAWH;;AAtE4B;;AAyEjC,eAAevB,QAAf"},"metadata":{},"sourceType":"module"}